services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: raina
      RABBITMQ_DEFAULT_PASS: raina

  workspace-service:
    build:
      context: ..                               # <- repo root
      dockerfile: services/workspace-service/Dockerfile
    env_file:
      - ../services/workspace-service/.env.example
    environment:
      MONGO_URI: mongodb+srv://sandeepk:sandeep@cluster0.tnbpi.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      MONGO_DB: RainaV2
      RABBITMQ_URI: amqp://raina:raina@rabbitmq:5672/
      RABBITMQ_EXCHANGE: raina.events
      SERVICE_NAME: workspace-service
    depends_on:
      - rabbitmq
    ports:
      - "8010:8010"

  artifact-service:
    build:
      context: ..                               # <- repo root
      dockerfile: services/artifact-service/Dockerfile
    container_name: artifact-service
    environment:
      MONGO_URI: mongodb+srv://sandeepk:sandeep@cluster0.tnbpi.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      MONGO_DB: RainaV2
      RABBITMQ_URI: amqp://raina:raina@rabbitmq:5672/
      RABBITMQ_EXCHANGE: raina.events
    depends_on:
      - rabbitmq
    ports:
      - "8011:8011"

  capability-registry:
    build:
      context: ..                               # <- repo root
      dockerfile: services/capability-registry/Dockerfile
    environment:
      MONGO_URI: mongodb+srv://sandeepk:sandeep@cluster0.tnbpi.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      MONGO_DB: RainaV2
      RABBITMQ_URI: amqp://raina:raina@rabbitmq:5672/
      RABBITMQ_EXCHANGE: raina.events
    depends_on:
      - rabbitmq
    ports:
      - "8012:8012"

  discovery-service:
    build:
      context: ..                               # <- repo root
      dockerfile: services/discovery-service/Dockerfile
    env_file:
      - ../services/discovery-service/.env.example
    environment:
      OPENAI_API_KEY: <OPENAI_API_KEY>
      CAPABILITY_REGISTRY_URL: http://capability-registry:8012
      ARTIFACT_SERVICE_URL: http://artifact-service:8011
      RABBITMQ_URI: amqp://raina:raina@rabbitmq:5672/
      RABBITMQ_EXCHANGE: raina.events
    depends_on:
      - rabbitmq  
    ports:
      - "8013:8013"

  guidance-service:
    build:
      context: ..                               # <- repo root
      dockerfile: services/guidance-service/Dockerfile
    container_name: guidance-service
    env_file:
      - ../services/guidance-service/.env.example   # <- matches your structure
    environment:
      # override or inject secrets at compose time if you want
      OPENAI_API_KEY: <OPENAI_API_KEY>
      ARTIFACT_SERVICE_URL: http://artifact-service:8011
      RABBITMQ_URL: amqp://raina:raina@rabbitmq:5672/
    volumes:
      - ../services/guidance-service/output:/output
    depends_on:
      - artifact-service
      - rabbitmq
    ports:
      - "8014:8014"   # host:container (service listens on 8014 in the container)

  notification-service:
    build:
      context: ..                               # <- repo root
      dockerfile: services/notification-service/Dockerfile
    environment:
      RABBITMQ_URL: amqp://raina:raina@rabbitmq:5672/
      RABBITMQ_EXCHANGE: raina.events
      RABBITMQ_QUEUE: notification-service.v1
      # optional: override bindings if needed
      # RABBITMQ_BINDINGS: '["*.workspace.*.v1","*.artifact.*.v1","*.discovery.*.v1","*.guidance.*.v1","*.capability.*.v1","*.notification.*.v1","*.audit.*.v1","*.error.*.v1"]'
    depends_on:
      - rabbitmq
    ports:
      - "8016:8016"   # host:container (container listens on 8013)

